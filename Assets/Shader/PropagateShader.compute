#pragma kernel CSMain

// Grid properties, set from C#:
uint Width;
uint Height;

// Input and output buffers
StructuredBuffer<double> Input;
StructuredBuffer<double> Liquidity;
RWStructuredBuffer<double> Output;

uint CountNeighbors(uint x, uint y)
{
    uint result = 0;
    if (x > 0) result++;
    if (x < Width - 1) result++;
    if (y > 0) result++;
    if (y < Height - 1) result++;
    return result;
}

double CalculateContribution(uint index)
{
    return Liquidity[index] * Input[index] / 4;
}

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    const uint x = id.x;
    const uint y = id.y;
    const uint index = y * Width + x;

    double acc = 0;

    acc += Input[index] * (1 - Liquidity[index]);
    // in the cases for edge or corner this behaves as if space outside the grid has the same value
    acc += Input[index] * Liquidity[index] * (1 - 0.25 * CountNeighbors(x,y));

    if (x < Width - 1)
    {
        acc += CalculateContribution(index + 1);
    }

    if (x > 0)
    {
        acc += CalculateContribution(index - 1);
    }

    if (y < Height - 1)
    {
        acc += CalculateContribution(index + Width);
    }

    if (y > 0)
    {
        acc += CalculateContribution(index - Width);
    }

    Output[index] = acc;
}
